[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sga_momentum_degradation"
version = "1.0.0"
description = "Federated Learning with PyTorch and Flower (Quickstart Example)"
license = "Apache-2.0"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.flwr.app]
publisher = "flwrlabs"

[tool.flwr.app.components]
serverapp = "src.server_app:app"
clientapp = "src.client_app:app"

[tool.flwr.app.config]
num-of-clients = 5
momentum = 0.9
learning-rate = 0.005
num-batches-each-round = 10
fraction-evaluate = 1
local-epochs = 5
batch-size = 128
gradient-accumulation-steps = 4
data-loader-alpha = 0.1
prepare-dataset = false
unlearning-trigger-client = 0

# # Federated Learning Configuration
# mode = "federated_learning"
# num-server-rounds = 100


# Federated Unlearning Configuration
mode = "federated_unlearning"
num-server-rounds = 6
knowledge-eraser-rounds = 2
degraded-model-refinement-learning-rate = 0.01
degraded-model-unlearning-rate = 0.01
weight-factor-degradation-model = 0.45
weight-factor-global-model = 0


# # Retraining Configuration
# mode = "retraining"
# num-server-rounds = 100


# Paths
logs-folder-path = "log"
dataset-folder-path = "src/clients_dataset"
plots-folder-path = "src/plots"
models-folder-path = "src/models"

# Dataset and Model Configuration
dataset-name = "mnist"
dataset-num-channels = 1
dataset-num-classes = 10
dataset-input-feature = "image"
dataset-target-feature = "label"
model-name = "resnet18"
model-input-image-size = 224

[tool.flwr.federations]
default = "local-simulation"

[tool.flwr.federations.local-simulation]
options.num-supernodes = 5

[tool.flwr.federations.local-simulation-gpu]
options.num-supernodes = 5
options.backend.client-resources.num-cpus = 2 # each ClientApp assumes to use 2CPUs
options.backend.client-resources.num-gpus = 1 # at most 5 ClientApp will run in a given GPU

[tool.pylint.'MESSAGES CONTROL']
disable = ["missing-docstring"]
